<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "https://specifications.freedesktop.org/dbus/introspect-latest.dtd">
<node>
    <!-- 
        com.redhat.Yggdrasil1:
        @short_description: Yggdrasil object interface

        The Yggdrasil1 interface exposes methods and signals enabling
        programmatic interaction with the yggdrasil system service.
    -->
    <interface name="com.redhat.Yggdrasil1">
        <!-- 
            Dispatch:
            @directive: worker identifier for which the data is destined.
            @id: Unique ID of the message.
            @metadata: Optional key-value pairs included in the message.
            @data: The message content

            Sends data to the worker identified by the given directive.
        -->
        <method name="Dispatch">
            <arg type="s" name="directive" direction="in" />
            <arg type="s" name="id" direction="in" />
            <arg type="a{ss}" name="metadata" direction="in" />
            <arg type="ay" name="data" direction="in" />
        </method>

        <!--
            ListWorkers:
            @workers: The set of workers.

            Returns the set of workers currently known, along with their
            "features" table.
        -->
        <method name="ListWorkers">
            <arg type="a{sa{ss}}" name="workers" direction="out" />
        </method>

        <!-- 
            WorkerEvent:
            @worker: Name of the worker emitting the event.
            @name: Name of the event.
            @message_id: The id associated with the worker message.
            @message: Optional message included with the event.

            Emitted by a worker when certain conditions arise, such as beginning
            or ending work.

            The possible values for the 'name' argument are:

            1 = BEGIN
            Emitted when the worker "accepts" a dispatched message and begins
            "working".
            
            2 = END
            Emitted when the worker finishes "working".

            3 = WORKING
            Emitted when the worker wishes to continue to announce it is
            working.
        -->
        <signal name="WorkerEvent">
            <arg type="s" name="worker" />
            <arg type="u" name="name" />
            <arg type="s" name="message_id" />
            <arg type="s" name="message" />
        </signal>
    </interface>
</node>
